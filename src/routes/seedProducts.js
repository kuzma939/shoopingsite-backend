const express = require('express');
const router = express.Router();
const prisma = require('../prisma'); // üî• –Ü–º–ø–æ—Ä—Ç Prisma –∫–ª—ñ—î–Ω—Ç–∞

router.post('/', async (req, res) => {
  const rawProducts = req.body;

  try {
    for (const rawProduct of rawProducts) {
      // üîπ –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ª–∏—à–µ —Ä—è–¥–∫–æ–≤—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–±–µ–∑ –≤—ñ–¥–µ–æ-–æ–±'—î–∫—Ç—ñ–≤)
      const cleanedImages = rawProduct.images?.filter(item => typeof item === 'string') || [];

      // üîπ –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ–¥—É–∫—Ç –∑ –ø–æ–ª—è–º–∏, —è–∫—ñ –æ—á—ñ–∫—É—î –±–∞–∑–∞
      const product = {
        id: rawProduct.id,
        price: rawProduct.price,
        isTop: rawProduct.isTop,
        sku: rawProduct.sku,
        size: rawProduct.size,
        category: rawProduct.category,
        image: rawProduct.image,
        images: cleanedImages,          // ‚úÖ images —è–∫ JSON-–º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤
        sizes: rawProduct.sizes || [],  // ‚úÖ sizes —è–∫ –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤
      };

      console.log('üì¶ –°–µ–π–¥–∏–º–æ –ø—Ä–æ–¥—É–∫—Ç:', product);

      await prisma.product.upsert({
        where: { id: product.id },
        update: {
          price: product.price,
          isTop: product.isTop,
          sku: product.sku,
          size: product.size,
          category: product.category,
          image: product.image,
          images: product.images,
          sizes: product.sizes,
        },
        create: {
          id: product.id,
          price: product.price,
          isTop: product.isTop,
          sku: product.sku,
          size: product.size,
          category: product.category,
          image: product.image,
          images: product.images,
          sizes: product.sizes,
        },
      });
    }

    res.status(200).json({ message: '‚úÖ Products successfully seeded!' });
  } catch (error) {
    console.error('‚ùå Seeding error:', error);
    res.status(500).json({ error: 'Failed to seed products' });
  }
});

module.exports = router;
