const express = require('express');
const router = express.Router();
const prisma = require('../prisma'); // üî• –Ü–º–ø–æ—Ä—Ç—É—î–º–æ Prisma –∫–ª—ñ—î–Ω—Ç

router.post('/', async (req, res) => {
  const rawProducts = req.body;

  try {
    for (const rawProduct of rawProducts) {
      const product = {
        ...rawProduct,
        // images ‚Äî –∑–∞–ª–∏—à–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —Ä—è–¥–∫–∏ (–≤—ñ–¥–∫–∏–¥–∞—î–º–æ –≤—ñ–¥–µ–æ –∞–±–æ –æ–±‚Äô—î–∫—Ç–∏)
        images: rawProduct.images?.filter(img => typeof img === 'string') || [],
        // sizes ‚Äî –ø–µ—Ä–µ–¥–∞—î–º–æ –Ω–∞–ø—Ä—è–º—É —è–∫ –º–∞—Å–∏–≤
        sizes: rawProduct.sizes || [],
      };

      // üëâ –ó–∞–ø–∏—Å—É—î–º–æ –∞–±–æ –æ–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ–¥—É–∫—Ç
      await prisma.product.upsert({
        where: { id: product.id },
        update: {
          price: product.price,
          isTop: product.isTop,
          sku: product.sku,
          size: product.size,
          category: product.category,
          image: product.image,
          images: product.images,
          sizes: product.sizes,
        },
        create: {
          id: product.id,
          price: product.price,
          isTop: product.isTop,
          sku: product.sku,
          size: product.size,
          category: product.category,
          image: product.image,
          images: product.images,
          sizes: product.sizes,
        },
      });
    }

    res.status(200).json({ message: '‚úÖ Products successfully seeded!' });
  } catch (error) {
    console.error('‚ùå Seeding error:', error);
    res.status(500).json({ error: 'Failed to seed products' });
  }
});

module.exports = router;
